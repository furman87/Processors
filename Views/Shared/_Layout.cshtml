<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Message Processor Framework</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    
    <!-- Inline script to prevent FOUC (Flash of Unstyled Content) -->
    <script>
        // Apply theme immediately before page renders
        (function() {
            const savedTheme = localStorage.getItem('theme') || 'light';
            if (savedTheme === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark');
            }
        })();
    </script>
    
    <style>
        /* Theme variables - defined first to prevent flicker */
        :root {
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --text-primary: #212529;
            --text-secondary: #6c757d;
            --border-color: #dee2e6;
            --card-bg: #ffffff;
            --navbar-bg: #343a40;
            --navbar-text: #ffffff;
            --btn-primary: #007bff;
            --btn-success: #28a745;
            --btn-danger: #dc3545;
            --btn-warning: #ffc107;
            --btn-info: #17a2b8;
        }

        [data-theme="dark"] {
            --bg-primary: #1a1a1a;
            --bg-secondary: #2d2d2d;
            --text-primary: #ffffff;
            --text-secondary: #b0b0b0;
            --border-color: #404040;
            --card-bg: #2d2d2d;
            --navbar-bg: #1a1a1a;
            --navbar-text: #ffffff;
            --btn-primary: #0d6efd;
            --btn-success: #28a745;
            --btn-danger: #dc3545;
            --btn-warning: #ffc107;
            --btn-info: #17a2b8;
        }

        /* Apply theme colors immediately */
        html {
            transition: none !important; /* Disable transitions during initial load */
        }
        
        body {
            background-color: var(--bg-primary) !important;
            color: var(--text-primary) !important;
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        
        /* Re-enable transitions after initial load */
        body.loaded {
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        
        html.loaded {
            transition: background-color 0.3s ease;
        }

        .navbar {
            background-color: var(--navbar-bg) !important;
            border-bottom: 1px solid var(--border-color);
        }
        
        .navbar-brand, .navbar-nav .nav-link {
            color: var(--navbar-text) !important;
        }
        
        .navbar-toggler {
            border-color: var(--border-color);
        }
        
        [data-theme="dark"] .navbar-toggler-icon {
            filter: invert(1);
        }
        
        .card {
            background-color: var(--card-bg);
            border-color: var(--border-color);
            color: var(--text-primary);
        }
        
        .form-control, .form-select {
            background-color: var(--card-bg);
            border-color: var(--border-color);
            color: var(--text-primary);
        }
        
        [data-theme="dark"] .form-control:focus,
        [data-theme="dark"] .form-select:focus {
            background-color: var(--card-bg);
            border-color: #4dabf7;
            color: var(--text-primary);
            box-shadow: 0 0 0 0.2rem rgba(77, 171, 247, 0.25);
        }
        
        .btn-outline-primary {
            color: var(--btn-primary);
            border-color: var(--btn-primary);
        }
        
        .btn-outline-primary:hover {
            background-color: var(--btn-primary);
            border-color: var(--btn-primary);
        }
        
        .theme-toggle {
            background: none;
            border: 1px solid var(--border-color);
            color: var(--text-primary);
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .theme-toggle:hover {
            background-color: var(--bg-secondary);
        }
        
        [data-theme="dark"] .theme-toggle {
            border-color: #404040;
        }
        
        [data-theme="dark"] .theme-toggle:hover {
            background-color: #404040;
        }
        
        .alert {
            background-color: var(--card-bg);
            border-color: var(--border-color);
            color: var(--text-primary);
        }
        
        .table {
            color: var(--text-primary);
        }
        
        [data-theme="dark"] .table {
            --bs-table-bg: var(--card-bg);
            --bs-table-striped-bg: rgba(255, 255, 255, 0.05);
            --bs-table-hover-bg: rgba(255, 255, 255, 0.075);
        }
        
        .modal-content {
            background-color: var(--card-bg);
            color: var(--text-primary);
        }
        
        .modal-header, .modal-footer {
            border-color: var(--border-color);
        }
        
        .dropdown-menu {
            background-color: var(--card-bg);
            border-color: var(--border-color);
        }
        
        .dropdown-item {
            color: var(--text-primary);
        }
        
        .dropdown-item:hover {
            background-color: var(--bg-secondary);
            color: var(--text-primary);
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <i class="fas fa-cogs"></i>
                Message Processor Framework
            </a>
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/Dashboard">
                            <i class="fas fa-tachometer-alt"></i>
                            Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/ConfigurationManagement">
                            <i class="fas fa-cog"></i>
                            Configuration
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/health">
                            <i class="fas fa-heartbeat"></i>
                            Health
                        </a>
                    </li>
                </ul>
                
                <div class="d-flex">
                    <button class="theme-toggle" onclick="toggleTheme()" title="Toggle Theme">
                        <i class="fas fa-moon" id="theme-icon"></i>
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <main role="main" class="flex-grow-1">
        @RenderBody()
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Theme management
        let currentTheme = localStorage.getItem('theme') || 'light';
        
        // Apply theme immediately when script loads
        function applyTheme(theme) {
            const html = document.documentElement;
            const icon = document.getElementById('theme-icon');
            
            if (theme === 'dark') {
                html.setAttribute('data-theme', 'dark');
                if (icon) icon.className = 'fas fa-sun';
            } else {
                html.removeAttribute('data-theme');
                if (icon) icon.className = 'fas fa-moon';
            }
            
            localStorage.setItem('theme', theme);
            currentTheme = theme;
        }
        
        // Initialize theme immediately
        applyTheme(currentTheme);
        
        function toggleTheme() {
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            applyTheme(newTheme);
        }
        
        // Enable smooth transitions after page load
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(() => {
                document.documentElement.classList.add('loaded');
                document.body.classList.add('loaded');
            }, 100); // Small delay to ensure everything is rendered
        });
        
        // Apply saved theme on page load (backup)
        document.addEventListener('DOMContentLoaded', function() {
            applyTheme(currentTheme);
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>